// ------------------------------------
// input utilities
// ------------------------------------
/// @access private
// ------------------------------------
// sass-lint:disable no-vendor-prefixes no-important

@import '../config/all';
@import 'positioning'; // pulling in z()
@import 'responsive'; // pulling in on-bp()
// base icon mixins to get icons
@import '../icons/base-mixins';

// ------------------------------------
// input-basic
// ------------------------------------
// defines basic input styles
// ------------------------------------

@mixin input-basic {
  position: relative;
  width: 100%;
  height: cssvar(input-height-mobile);
  padding: 0 cssvar(spacing-xs);
  border: 1px solid cssvar(input-border-color);
  border-radius: cssvar(input-border-radius);
  background-color: cssvar(input-bg-color);
  color: cssvar(primary-content-color);
  font-family: inherit;
  font-size: cssvar(font-size-primary);
  font-weight: cssvar(font-weight-normal);
  line-height: cssvar(line-height-mobile);
  text-overflow: ellipsis;
  // getting rid of default iOS webkit styles
  appearance: none;

  @include on-bp(xl) {
    height: cssvar(input-height-desktop);
    line-height: cssvar(line-height-desktop);
  }

  &::placeholder {
    color: cssvar(input-placeholder-color);
    font-style: italic;
  }
}

@mixin input-decorations {
  [type='time'],
  [type='date'],
  [type='datetime-local'],
  [type='month'],
  [type='week'] {
    // hides spinner buttons for dates on older chrome versions
    &::-webkit-inner-spin-button {
      appearance: none;
    }

    &::-webkit-calendar-picker-indicator {
      display: block !important; // always shows icon on older chrome versions
      order: -1; // moves icon to the left
      width: cssvar(spacing-sm);
      height: cssvar(spacing-sm);
      margin-right: cssvar(spacing-xxs);
      margin-left: 0;
      padding: 0;
      color: transparent; // hides old chrome versions default content text
      opacity: 1; // always shows icon on older chrome versions
    }

    &::-webkit-clear-button {
      // older chrome versions show a clear button
      width: cssvar(spacing-sm);
      height: cssvar(spacing-sm);
      background: cssvar(icon-close);
      background-size: cssvar(spacing-sm) cssvar(spacing-sm);
      appearance: none;
    }
  }

  [type='search']::-webkit-search-cancel-button {
    width: cssvar(spacing-sm);
    height: cssvar(spacing-sm);
    background: cssvar(icon-close);
    background-size: cssvar(spacing-sm) cssvar(spacing-sm);
    appearance: none;
  }

  [type='date'],
  [type='datetime-local'],
  [type='month'],
  [type='week'] {
    &::-webkit-calendar-picker-indicator {
      background: cssvar(icon-calendar);
      background-size: cssvar(spacing-sm) cssvar(spacing-sm);
    }
  }

  [type='time']::-webkit-calendar-picker-indicator {
    background: cssvar(icon-time);
    background-size: cssvar(spacing-sm) cssvar(spacing-sm);
  }
}

// ------------------------------------
// input-states
// ------------------------------------
// defines common appearance params for input error/valid states
// currently requires icon mixins (imported here above)
@mixin input-states ($top: center, $right: cssvar(spacing-xs)) {
  // valid and error states have icons
  &--error &__field,
  &--valid &__field {
    background-repeat:  no-repeat;
    background-position: calc(100% - (#{$right})) $top;
    background-size: cssvar(spacing-sm) cssvar(spacing-sm); //defining both width and height because ie11 cant handle shorthand background size
  }

  &--error &__field {
    background-image: cssvar(icon-attention-solid);
  }

  &--valid &__field {
    background-image: cssvar(icon-checkmark-solid);
  }

  &--disabled {
    opacity: cssvar(disabled-element-opacity);
  }
}

// ------------------------------------
// input-info-text
// ------------------------------------
// adds and style info feedback element for form inputs
@mixin input-info-text {
  &__info {
    @include show-as-small-text();
    display: block; // element needs to be a block one to have the proper line height applied
    padding-top: cssvar(spacing-xxxs);
  }

  &--error &__info {
    color: cssvar(input-error-info-color);
  }

  &__info ~ &__info {
    // to have only the first error info using error color and all subsequent info text have content color
    // independent of the number of span elements there are in the same hierarchy level
    color: cssvar(primary-content-color);
  }
}

// ------------------------------------
// input-outline
// ------------------------------------
// outline styles for for inputs
@mixin input-outline () {
  outline: 1px solid transparent;
  box-shadow: 0 0 3px cssvar(neutral-color); //@todo come up with general outline styles and strategy
}
