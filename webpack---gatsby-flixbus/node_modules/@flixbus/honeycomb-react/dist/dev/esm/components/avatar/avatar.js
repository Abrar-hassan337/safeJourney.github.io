import {
    objectWithoutProperties as _objectWithoutProperties,
    objectSpread2 as _objectSpread2
} from '../../_virtual/_rollupPluginBabelHelpers.js';
import React from 'react';
import styles from '../../node_modules/@flixbus/honeycomb/assets/scss/components/_avatar.js';
import HoneyBem from '../../packages/honey-bem/honey-bem.js';
import {
    Injecss
} from '../../packages/injecss/injecss.js';
import Icon from '../icon/icon.js';
import {
    IconProfile
} from '../icons/inline/icon-profile.js';
var _excluded = ["alt", "as", "children", "extraClasses", "size", "src", "url"];
var bem = HoneyBem('avatar', styles);

var Avatar = function Avatar(_ref) {
    var alt = _ref.alt,
        as = _ref.as,
        children = _ref.children,
        extraClasses = _ref.extraClasses,
        size = _ref.size,
        src = _ref.src,
        url = _ref.url,
        rest = _objectWithoutProperties(_ref, _excluded);

    var avatarClassNames = bem.b([size], extraClasses); // if no url passed render as div (default element type) or custom element provided via "as"

    var WrapperElement = url ? 'a' : as; // do not set "href" if no url is given, prevents setting href on a div

    var wrapperProps = _objectSpread2({}, url ? _objectSpread2({
        className: avatarClassNames,
        href: url
    }, rest) : _objectSpread2({
        className: avatarClassNames
    }, rest));

    return /*#__PURE__*/ React.createElement(WrapperElement, wrapperProps, src && /*#__PURE__*/ React.createElement("img", {
        className: bem.e('image'),
        src: src,
        alt: alt
    }), !src && children);
};

Avatar.displayName = 'Avatar';
Avatar.defaultProps = {
    alt: '',
    as: 'div',
    extraClasses: '',
    children: /*#__PURE__*/ React.createElement(Icon, {
        InlineIcon: IconProfile,
        size: "cover"
    }),
    size: null,
    src: '',
    url: null
};
var Avatar$1 = Injecss(Avatar, styles);
export default Avatar$1;
export {
    Avatar
};