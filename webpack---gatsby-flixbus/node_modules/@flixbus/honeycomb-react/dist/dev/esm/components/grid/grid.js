import {
    defineProperty as _defineProperty
} from '../../_virtual/_rollupPluginBabelHelpers.js';
import React from 'react';
import styles from '../../node_modules/@flixbus/honeycomb/assets/scss/layout/_grid.js';
import HoneyBem from '../../packages/honey-bem/honey-bem.js';
import requiredChildrenValidation from '../../prop-types-validators/children-validator.js';
import {
    Injecss
} from '../../packages/injecss/injecss.js';

var Grid = function Grid(_ref) {
    var _bemGrid$b;

    var extraClasses = _ref.extraClasses,
        children = _ref.children,
        applyContainer = _ref.applyContainer,
        align = _ref.align,
        justify = _ref.justify;
    var bemGrid = HoneyBem('grid', styles);
    var bemGridContainer = HoneyBem('grid-container', styles);
    var bemGridClassNames = bemGrid.b((_bemGrid$b = {}, _defineProperty(_bemGrid$b, "align-".concat(align), align), _defineProperty(_bemGrid$b, "justify-".concat(justify), justify), _bemGrid$b), extraClasses);
    var gridRow = /*#__PURE__*/ React.createElement("div", {
        className: bemGridClassNames
    }, children);
    return /*#__PURE__*/ React.createElement(React.Fragment, null, applyContainer ? /*#__PURE__*/ React.createElement("div", {
        className: bemGridContainer.b()
    }, gridRow) : gridRow);
};

Grid.defaultProps = {
    extraClasses: null,
    applyContainer: false,
    align: null,
    justify: null
};
Grid.displayName = 'Grid';
var grid = Injecss(Grid, styles);
export default grid;
export {
    Grid
};