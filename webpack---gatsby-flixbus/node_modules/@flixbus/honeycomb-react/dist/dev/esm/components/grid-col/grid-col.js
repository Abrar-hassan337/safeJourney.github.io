import {
    defineProperty as _defineProperty
} from '../../_virtual/_rollupPluginBabelHelpers.js';
import React from 'react';
import styles from '../../node_modules/@flixbus/honeycomb/assets/scss/layout/_grid.js';
import HoneyBem from '../../packages/honey-bem/honey-bem.js';
var gridColBem = HoneyBem('col', styles);

var GridCol = function GridCol(_ref) {
    var _gridColBem$mix;

    var extraClasses = _ref.extraClasses,
        children = _ref.children,
        inline = _ref.inline,
        size = _ref.size,
        sm = _ref.sm,
        md = _ref.md,
        lg = _ref.lg,
        xl = _ref.xl,
        push = _ref.push,
        pushSm = _ref.pushSm,
        pushMd = _ref.pushMd,
        pushLg = _ref.pushLg,
        pushXl = _ref.pushXl; // `flix-col-` and `flix-push-` grid classes doesn't follow the BEM syntax,
    // using BEM mixes in order to assemble the resulting class string

    var colClassNames = gridColBem.mix((_gridColBem$mix = {}, _defineProperty(_gridColBem$mix, extraClasses, extraClasses), _defineProperty(_gridColBem$mix, gridColBem.b({
        inline: inline
    }), !size), _defineProperty(_gridColBem$mix, HoneyBem("col-".concat(size), styles).b(), size), _defineProperty(_gridColBem$mix, HoneyBem("col-".concat(sm, "-sm"), styles).b(), sm), _defineProperty(_gridColBem$mix, HoneyBem("col-".concat(md, "-md"), styles).b(), md), _defineProperty(_gridColBem$mix, HoneyBem("col-".concat(lg, "-lg"), styles).b(), lg), _defineProperty(_gridColBem$mix, HoneyBem("col-".concat(xl, "-xl"), styles).b(), xl), _defineProperty(_gridColBem$mix, HoneyBem("push-".concat(push), styles).b(), push), _defineProperty(_gridColBem$mix, HoneyBem("push-".concat(pushSm, "-sm"), styles).b(), pushSm), _defineProperty(_gridColBem$mix, HoneyBem("push-".concat(pushMd, "-md"), styles).b(), pushMd), _defineProperty(_gridColBem$mix, HoneyBem("push-".concat(pushLg, "-lg"), styles).b(), pushLg), _defineProperty(_gridColBem$mix, HoneyBem("push-".concat(pushXl, "-xl"), styles).b(), pushXl), _gridColBem$mix));
    return /*#__PURE__*/ React.createElement("div", {
        className: colClassNames
    }, children);
};

GridCol.displayName = 'GridCol';
GridCol.defaultProps = {
    extraClasses: null,
    inline: null,
    size: null,
    sm: null,
    md: null,
    lg: null,
    xl: null,
    push: null,
    pushSm: null,
    pushMd: null,
    pushLg: null,
    pushXl: null
};
export default GridCol;
export {
    GridCol
};