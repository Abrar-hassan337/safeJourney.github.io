import {
    slicedToArray as _slicedToArray
} from '../../_virtual/_rollupPluginBabelHelpers.js';
import React, {
    useState
} from 'react';
import styles from './footer-nav2.js';
import HoneyBem from '../../packages/honey-bem/honey-bem.js';
import {
    InlineIconPropType
} from '../../hooks/use-inline-icon/inline-icon-proptype.js';
import {
    Injecss
} from '../../packages/injecss/injecss.js';
import NavItem from '../nav-side/quarks/nav-item/nav-item.js';
var bem = HoneyBem('footer-nav', styles);

var FooterNav = function FooterNav(_ref) {
    var content = _ref.content,
        extraClasses = _ref.extraClasses,
        ariaLabel = _ref['aria-label'];
    var title = content.title,
        first = content.first,
        children = content.children;

    var _useState = useState(false),
        _useState2 = _slicedToArray(_useState, 2),
        open = _useState2[0],
        setOpen = _useState2[1];

    var handleKeyPress = function handleKeyPress(event) {
        var SPACE_KEY = 32;
        var ENTER_KEY = 13;

        if (event.charCode === SPACE_KEY || event.charCode === ENTER_KEY) {
            // disables page scrolling when space bar is pressed
            event.preventDefault();
            setOpen(!open);
        }
    };

    return /*#__PURE__*/ React.createElement("nav", {
        "aria-label": ariaLabel,
        className: bem.b({
            first: first
        }, extraClasses)
    }, /*#__PURE__*/ React.createElement("div", {
        tabIndex: "0",
        role: "button",
        onClick: function onClick() {
            return setOpen(!open);
        },
        onKeyPress: function onKeyPress(event) {
            return handleKeyPress(event);
        }
    }, /*#__PURE__*/ React.createElement("h4", {
        className: bem.e('title', {
            open: open
        })
    }, title)), /*#__PURE__*/ React.createElement("ul", {
        className: bem.e('items', {
            open: open
        }),
        "aria-expanded": open
    }, children.map(function(_ref2, i) {
        var text = _ref2.text,
            href = _ref2.href,
            key = _ref2.key,
            RouterLink = _ref2.RouterLink,
            InlineIcon = _ref2.InlineIcon;
        return /*#__PURE__*/ React.createElement(NavItem, {
            parentBem: bem,
            href: href,
            RouterLink: RouterLink,
            InlineIcon: InlineIcon,
            key: key || "".concat(text, " + ").concat(i)
        }, text);
    })));
};

FooterNav.displayName = 'FooterNav';
FooterNav.defaultProps = {
    extraClasses: '',
    'aria-label': null
};
var footerNav = Injecss(FooterNav, styles);
export default footerNav;
export {
    FooterNav
};